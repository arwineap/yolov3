// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	yolov3 "github.com/wimspaargaren/yolov3"
	gocv "gocv.io/x/gocv"
)

// Net is an autogenerated mock type for the Net type
type Net struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Net) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetDetections provides a mock function with given fields: _a0
func (_m *Net) GetDetections(_a0 gocv.Mat) ([]yolov3.ObjectDetection, error) {
	ret := _m.Called(_a0)

	var r0 []yolov3.ObjectDetection
	if rf, ok := ret.Get(0).(func(gocv.Mat) []yolov3.ObjectDetection); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]yolov3.ObjectDetection)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(gocv.Mat) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
